{{- if .Values.argocd.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server-ingress
  namespace: {{ .Values.argocd.namespace | default "argocd" }}
  labels:
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: server
    managed-by: argocd
  annotations:
    # Ingress class
    kubernetes.io/ingress.class: {{ .Values.argocd.ingress.ingressClassName | default "nginx" }}
    
    # External-DNS automatic DNS management
    external-dns.alpha.kubernetes.io/hostname: {{ .Values.argocd.ingress.hostname }}
    external-dns.alpha.kubernetes.io/target: "ingress-nginx-controller.ingress-nginx.svc.cluster.local"
    
    # SSL and TLS configuration
    cert-manager.io/cluster-issuer: {{ .Values.argocd.ingress.clusterIssuer | default "letsencrypt-prod" }}
    
    # NGINX specific annotations for ArgoCD
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
    
    # Additional security headers
    nginx.ingress.kubernetes.io/server-snippet: |
      grpc_read_timeout 300;
      grpc_send_timeout 300;
      client_body_timeout 60;
      client_header_timeout 60;
      client_max_body_size 10m;
spec:
  ingressClassName: {{ .Values.argocd.ingress.ingressClassName | default "nginx" }}
  tls:
    - hosts:
        - {{ .Values.argocd.ingress.hostname }}
      secretName: {{ .Values.argocd.ingress.hostname }}-tls
  rules:
    - host: {{ .Values.argocd.ingress.hostname }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: argocd-server
                port:
                  number: 80
{{- end }}