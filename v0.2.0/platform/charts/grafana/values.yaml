---
# Global configuration
global:
  repoURL: 'git@github.com:pnow-devsupreme/pn-infra.git'
  targetRevision: 'main'

# Labels configuration
labels:
  component: monitoring
  managed-by: argocd  # Override default Helm with ArgoCD

# Grafana configuration
replicas: 1

image:
  repository: grafana/grafana
  tag: '11.4.0'
  pullPolicy: IfNotPresent

resources:
  requests:
    memory: 128Mi
    cpu: 100m
  limits:
    memory: 256Mi
    cpu: 200m

# Persistence configuration
persistence:
  enabled: true
  type: pvc
  storageClassName: rook-ceph-block
  accessModes:
    - ReadWriteOnce
  size: 10Gi

# Admin credentials
adminUser: admin
adminPassword: admin123

# Service configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 3000

# Ingress configuration
ingress:
  enabled: true
  ingressClassName: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
  hosts:
    - host: grafana.platform.local
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: grafana-tls
      hosts:
        - grafana.platform.local

# Grafana configuration
grafana.ini:
  server:
    root_url: https://grafana.platform.local
    serve_from_sub_path: false
  auth:
    disable_login_form: false
  auth.anonymous:
    enabled: true
    org_role: Viewer
  security:
    allow_embedding: true
  users:
    allow_sign_up: false
    auto_assign_org: true
    auto_assign_org_role: Viewer
  log:
    mode: console
    level: info

# Datasources configuration
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        url: http://prometheus-kube-prometheus-prometheus.monitoring.svc.cluster.local:9090
        access: proxy
        isDefault: true
        jsonData:
          timeInterval: 30s
          httpMethod: POST
      - name: Loki
        type: loki
        url: http://loki.logging.svc.cluster.local:3100
        access: proxy
        jsonData:
          maxLines: 1000

# Dashboard providers
dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
      - name: 'kubernetes'
        orgId: 1
        folder: 'Kubernetes'
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/kubernetes

# Dashboard configuration maps
dashboards:
  default:
    platform-overview:
      gnetId: 15757
      revision: 40
      datasource: Prometheus
    kubernetes-cluster:
      gnetId: 7249
      revision: 1
      datasource: Prometheus
  kubernetes:
    kubernetes-pods:
      gnetId: 6336
      revision: 1
      datasource: Prometheus
    kubernetes-nodes:
      gnetId: 1860
      revision: 31
      datasource: Prometheus

# RBAC configuration
rbac:
  create: true
  pspEnabled: false

serviceAccount:
  create: true
  autoMount: true

# Security context
securityContext:
  runAsNonRoot: true
  runAsUser: 472
  runAsGroup: 472
  fsGroup: 472

# Pod security context
podSecurityContext:
  fsGroup: 472

# Node selector and tolerations
nodeSelector: {}
tolerations: []
affinity: {}
