---
# Global Sync Failure Notification Hook
# Notifies administrators when platform sync fails
apiVersion: batch/v1
kind: Job
metadata:
  name: platform-sync-failure-notification
  namespace: argocd
  annotations:
    argocd.argoproj.io/hook: SyncFail
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  ttlSecondsAfterFinished: 300
  template:
    spec:
      serviceAccountName: argocd-server
      containers:
      - name: failure-notifier
        image: bitnami/kubectl:latest
        command:
        - sh
        - -c
        - |
          set -e
          
          APP_NAME="${ARGOCD_APP_NAME:-platform-root-template-driven}"
          APP_NAMESPACE="${ARGOCD_APP_NAMESPACE:-argocd}"
          REVISION="${ARGOCD_APP_REVISION:-unknown}"
          
          echo "üö® PLATFORM SYNC FAILURE DETECTED"
          echo "Application: $APP_NAME"
          echo "Namespace: $APP_NAMESPACE" 
          echo "Revision: $REVISION"
          echo "Timestamp: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          echo ""
          
          # Get application status
          echo "üìä APPLICATION STATUS:"
          kubectl get application $APP_NAME -n $APP_NAMESPACE -o yaml | grep -A 10 "status:" || echo "Could not retrieve application status"
          echo ""
          
          # Get recent events
          echo "üìã RECENT EVENTS:"
          kubectl get events -n $APP_NAMESPACE --sort-by='.lastTimestamp' --field-selector involvedObject.name=$APP_NAME | tail -10 || echo "No recent events found"
          echo ""
          
          # Get failed resources
          echo "‚ùå FAILED RESOURCES:"
          kubectl get application $APP_NAME -n $APP_NAMESPACE -o jsonpath='{.status.resources[?(@.health.status!="Healthy")]}' | jq . 2>/dev/null || echo "Could not retrieve failed resources"
          echo ""
          
          # Check child applications status
          echo "üìä CHILD APPLICATIONS STATUS:"
          kubectl get applications -n $APP_NAMESPACE -l app.kubernetes.io/managed-by=platform-root-template-driven -o custom-columns="NAME:.metadata.name,HEALTH:.status.health.status,SYNC:.status.sync.status" 2>/dev/null || echo "No child applications found"
          echo ""
          
          # Log to ArgoCD events (this would be picked up by monitoring)
          kubectl annotate application $APP_NAME -n $APP_NAMESPACE \
            "notifications.argoproj.io/last-sync-failure=$(date -u '+%Y-%m-%d %H:%M:%S UTC')" \
            --overwrite || true
          
          echo "üîî Platform failure notification logged to application annotations"
          echo "üìù Check ArgoCD UI for detailed sync information"
          echo "üõ†Ô∏è  Platform administrators should investigate immediately"
          
        env:
        - name: ARGOCD_APP_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/instance']
        - name: ARGOCD_APP_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
              
      restartPolicy: Never
  backoffLimit: 1