---
- name: Apply GitOps Entrypoint
  hosts: masters[0] # Run on first master only
  become: yes
  tasks:
    - name: Copy SSH private key to remote server
      copy:
        src: "{{ ssh_key_path_local }}"
        dest: "{{ ssh_key_path_remote }}"
        mode: "0600"
      no_log: true

    - name: Create SSH config for GitHub
      copy:
        dest: "/tmp/ssh_config"
        content: |
          Host github.com
            HostName github.com
            User git
            IdentityFile {{ ssh_key_path_remote }}
            StrictHostKeyChecking no
        mode: "0600"

    - name: Remove previous clone if exists
      file:
        path: "{{ repo_clone_path }}"
        state: absent

    - name: Clone GitHub repository using SSH
      shell: |
        GIT_SSH_COMMAND="ssh -F /tmp/ssh_config" git clone {{ git_repo_url }} {{ repo_clone_path }} --branch {{ git_repo_branch }}
      register: git_clone_result
      changed_when: git_clone_result.rc == 0
      failed_when: git_clone_result.rc != 0

    - name: Apply Kubernetes manifests
      command: microk8s kubectl apply -k {{ repo_clone_path }}/bootstrap/entrypoint
      register: apply_result
      changed_when: "'created' in apply_result.stdout or 'configured' in apply_result.stdout"

    - name: Wait for root ApplicationSet to be created
      shell: microk8s kubectl wait --for=condition=established --timeout=30s crd/applicationsets.argoproj.io || true
      changed_when: false

    - name: Clean up SSH key and cloned repository
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ ssh_key_path_remote }}"
        - "/tmp/ssh_config"
        - "{{ repo_clone_path }}"

    - name: Display success message
      debug:
        msg: "Successfully applied GitOps entrypoint manifests"
