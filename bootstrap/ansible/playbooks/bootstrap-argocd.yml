---
- name: Bootstrap ArgoCD
  hosts: masters[0]
  become: yes
  vars:
    argocd_namespace: argocd
    argocd_manifest_url: https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
    argocd_version: stable
  tasks:
    - name: Create ArgoCD namespace
      command: microk8s kubectl create namespace {{ argocd_namespace }} --dry-run=client -o yaml | microk8s kubectl apply -f -
      changed_when: false

    - name: Deploy ArgoCD
      command: microk8s kubectl apply -n {{ argocd_namespace }} -f {{ argocd_manifest_url }}
      register: argocd_deploy
      changed_when: "'created' in argocd_deploy.stdout or 'configured' in argocd_deploy.stdout"

    - name: Wait for ArgoCD server to be ready
      command: microk8s kubectl wait --for=condition=available --timeout=300s deployment/argocd-server -n {{ argocd_namespace }}
      changed_when: false

    - name: Get ArgoCD admin password
      command: microk8s kubectl -n {{ argocd_namespace }} get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
      register: argocd_password
      changed_when: false

    - name: Display ArgoCD admin password
      debug:
        msg: "ArgoCD Admin Password: {{ argocd_password.stdout }}"

    - name: Create ArgoCD LoadBalancer service
      command: >
        microk8s kubectl patch svc argocd-server -n {{ argocd_namespace }} -p '{"spec": {"type": "LoadBalancer"}}'
      register: argocd_svc
      changed_when: "'patched' in argocd_svc.stdout"

    - name: Wait for LoadBalancer IP to be assigned
      command: microk8s kubectl get svc argocd-server -n {{ argocd_namespace }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
      register: lb_ip
      until: lb_ip.stdout != ""
      retries: 30
      delay: 10
      changed_when: false

    - name: Display ArgoCD access information
      debug:
        msg: 
          - "ArgoCD UI is accessible at: https://{{ lb_ip.stdout }}:443"
          - "Username: admin"
          - "Password: {{ argocd_password.stdout }}"
